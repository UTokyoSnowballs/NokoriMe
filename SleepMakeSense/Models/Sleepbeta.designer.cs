#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SleepMakeSense.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sleepexplorer-database")]
	public partial class SleepbetaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertDiaryData(DiaryData instance);
    partial void UpdateDiaryData(DiaryData instance);
    partial void DeleteDiaryData(DiaryData instance);
    partial void InsertFitbitData(FitbitData instance);
    partial void UpdateFitbitData(FitbitData instance);
    partial void DeleteFitbitData(FitbitData instance);
    partial void InsertTokenManagement(TokenManagement instance);
    partial void UpdateTokenManagement(TokenManagement instance);
    partial void DeleteTokenManagement(TokenManagement instance);
    partial void InsertUserQuestion(UserQuestion instance);
    partial void UpdateUserQuestion(UserQuestion instance);
    partial void DeleteUserQuestion(UserQuestion instance);
    #endregion
		
		public SleepbetaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SleepBetaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SleepbetaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepbetaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepbetaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SleepbetaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<DiaryData> DiaryDatas
		{
			get
			{
				return this.GetTable<DiaryData>();
			}
		}
		
		public System.Data.Linq.Table<FitbitData> FitbitDatas
		{
			get
			{
				return this.GetTable<FitbitData>();
			}
		}
		
		public System.Data.Linq.Table<TokenManagement> TokenManagements
		{
			get
			{
				return this.GetTable<TokenManagement>();
			}
		}
		
		public System.Data.Linq.Table<UserQuestion> UserQuestions
		{
			get
			{
				return this.GetTable<UserQuestion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<DiaryData> _DiaryDatas;
		
		private EntitySet<FitbitData> _FitbitDatas;
		
		private EntitySet<TokenManagement> _TokenManagements;
		
		private EntitySet<UserQuestion> _UserQuestions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._DiaryDatas = new EntitySet<DiaryData>(new Action<DiaryData>(this.attach_DiaryDatas), new Action<DiaryData>(this.detach_DiaryDatas));
			this._FitbitDatas = new EntitySet<FitbitData>(new Action<FitbitData>(this.attach_FitbitDatas), new Action<FitbitData>(this.detach_FitbitDatas));
			this._TokenManagements = new EntitySet<TokenManagement>(new Action<TokenManagement>(this.attach_TokenManagements), new Action<TokenManagement>(this.detach_TokenManagements));
			this._UserQuestions = new EntitySet<UserQuestion>(new Action<UserQuestion>(this.attach_UserQuestions), new Action<UserQuestion>(this.detach_UserQuestions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_DiaryData", Storage="_DiaryDatas", ThisKey="Id", OtherKey="AspNetUserId")]
		public EntitySet<DiaryData> DiaryDatas
		{
			get
			{
				return this._DiaryDatas;
			}
			set
			{
				this._DiaryDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_FitbitData", Storage="_FitbitDatas", ThisKey="Id", OtherKey="AspNetUserId")]
		public EntitySet<FitbitData> FitbitDatas
		{
			get
			{
				return this._FitbitDatas;
			}
			set
			{
				this._FitbitDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_TokenManagement", Storage="_TokenManagements", ThisKey="Id", OtherKey="AspNetUserId")]
		public EntitySet<TokenManagement> TokenManagements
		{
			get
			{
				return this._TokenManagements;
			}
			set
			{
				this._TokenManagements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_UserQuestion", Storage="_UserQuestions", ThisKey="Id", OtherKey="AspNetUserId")]
		public EntitySet<UserQuestion> UserQuestions
		{
			get
			{
				return this._UserQuestions;
			}
			set
			{
				this._UserQuestions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiaryDatas(DiaryData entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_DiaryDatas(DiaryData entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_FitbitDatas(FitbitData entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_FitbitDatas(FitbitData entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_TokenManagements(TokenManagement entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_TokenManagements(TokenManagement entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_UserQuestions(UserQuestion entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_UserQuestions(UserQuestion entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiaryData")]
	public partial class DiaryData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AspNetUserId;
		
		private System.DateTime _DateStamp;
		
		private string _WakeUpFreshness;
		
		private string _Mood;
		
		private string _Stress;
		
		private string _Tiredness;
		
		private string _Dream;
		
		private string _BodyTemp;
		
		private string _Hormone;
		
		private string _SchoolStress;
		
		private string _CoffeeAmt;
		
		private string _CoffeeTime;
		
		private string _AlcoholAmt;
		
		private string _AlcoholTime;
		
		private string _NapTime;
		
		private string _NapDuration;
		
		private string _DigDeviceDuration;
		
		private string _GamesDuration;
		
		private string _SocialActivites;
		
		private string _SocialActivity;
		
		private string _MusicDuration;
		
		private string _TVDuration;
		
		private string _WorkTime;
		
		private string _WorkDuration;
		
		private string _ExerciseDuration;
		
		private string _ExerciseIntensity;
		
		private string _DinnerTime;
		
		private string _SnackTime;
		
		private string _AmbientTemp;
		
		private string _AmbientHumd;
		
		private string _Light;
		
		private string _SunRiseTime;
		
		private string _SunSetTime;
		
		private string _SocialMedia;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnWakeUpFreshnessChanging(string value);
    partial void OnWakeUpFreshnessChanged();
    partial void OnMoodChanging(string value);
    partial void OnMoodChanged();
    partial void OnStressChanging(string value);
    partial void OnStressChanged();
    partial void OnTirednessChanging(string value);
    partial void OnTirednessChanged();
    partial void OnDreamChanging(string value);
    partial void OnDreamChanged();
    partial void OnBodyTempChanging(string value);
    partial void OnBodyTempChanged();
    partial void OnHormoneChanging(string value);
    partial void OnHormoneChanged();
    partial void OnSchoolStressChanging(string value);
    partial void OnSchoolStressChanged();
    partial void OnCoffeeAmtChanging(string value);
    partial void OnCoffeeAmtChanged();
    partial void OnCoffeeTimeChanging(string value);
    partial void OnCoffeeTimeChanged();
    partial void OnAlcoholAmtChanging(string value);
    partial void OnAlcoholAmtChanged();
    partial void OnAlcoholTimeChanging(string value);
    partial void OnAlcoholTimeChanged();
    partial void OnNapTimeChanging(string value);
    partial void OnNapTimeChanged();
    partial void OnNapDurationChanging(string value);
    partial void OnNapDurationChanged();
    partial void OnDigDeviceDurationChanging(string value);
    partial void OnDigDeviceDurationChanged();
    partial void OnGamesDurationChanging(string value);
    partial void OnGamesDurationChanged();
    partial void OnSocialFamilyChanging(string value);
    partial void OnSocialFamilyChanged();
    partial void OnSocialFriendChanging(string value);
    partial void OnSocialFriendChanged();
    partial void OnMusicDurationChanging(string value);
    partial void OnMusicDurationChanged();
    partial void OnTVDurationChanging(string value);
    partial void OnTVDurationChanged();
    partial void OnWorkTimeChanging(string value);
    partial void OnWorkTimeChanged();
    partial void OnWorkDurationChanging(string value);
    partial void OnWorkDurationChanged();
    partial void OnExerciseDurationChanging(string value);
    partial void OnExerciseDurationChanged();
    partial void OnExerciseIntensityChanging(string value);
    partial void OnExerciseIntensityChanged();
    partial void OnDinnerTimeChanging(string value);
    partial void OnDinnerTimeChanged();
    partial void OnSnackTimeChanging(string value);
    partial void OnSnackTimeChanged();
    partial void OnAmbientTempChanging(string value);
    partial void OnAmbientTempChanged();
    partial void OnAmbientHumdChanging(string value);
    partial void OnAmbientHumdChanged();
    partial void OnLightChanging(string value);
    partial void OnLightChanged();
    partial void OnSunRiseTimeChanging(string value);
    partial void OnSunRiseTimeChanged();
    partial void OnSunSetTimeChanging(string value);
    partial void OnSunSetTimeChanged();
    partial void OnSocialMediaChanging(string value);
    partial void OnSocialMediaChanged();
    #endregion
		
		public DiaryData()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WakeUpFreshness", DbType="NVarChar(50)")]
		public string WakeUpFreshness
		{
			get
			{
				return this._WakeUpFreshness;
			}
			set
			{
				if ((this._WakeUpFreshness != value))
				{
					this.OnWakeUpFreshnessChanging(value);
					this.SendPropertyChanging();
					this._WakeUpFreshness = value;
					this.SendPropertyChanged("WakeUpFreshness");
					this.OnWakeUpFreshnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood", DbType="NVarChar(50)")]
		public string Mood
		{
			get
			{
				return this._Mood;
			}
			set
			{
				if ((this._Mood != value))
				{
					this.OnMoodChanging(value);
					this.SendPropertyChanging();
					this._Mood = value;
					this.SendPropertyChanged("Mood");
					this.OnMoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stress", DbType="NVarChar(50)")]
		public string Stress
		{
			get
			{
				return this._Stress;
			}
			set
			{
				if ((this._Stress != value))
				{
					this.OnStressChanging(value);
					this.SendPropertyChanging();
					this._Stress = value;
					this.SendPropertyChanged("Stress");
					this.OnStressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiredness", DbType="NVarChar(50)")]
		public string Tiredness
		{
			get
			{
				return this._Tiredness;
			}
			set
			{
				if ((this._Tiredness != value))
				{
					this.OnTirednessChanging(value);
					this.SendPropertyChanging();
					this._Tiredness = value;
					this.SendPropertyChanged("Tiredness");
					this.OnTirednessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dream", DbType="NVarChar(50)")]
		public string Dream
		{
			get
			{
				return this._Dream;
			}
			set
			{
				if ((this._Dream != value))
				{
					this.OnDreamChanging(value);
					this.SendPropertyChanging();
					this._Dream = value;
					this.SendPropertyChanged("Dream");
					this.OnDreamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyTemp", DbType="NVarChar(50)")]
		public string BodyTemp
		{
			get
			{
				return this._BodyTemp;
			}
			set
			{
				if ((this._BodyTemp != value))
				{
					this.OnBodyTempChanging(value);
					this.SendPropertyChanging();
					this._BodyTemp = value;
					this.SendPropertyChanged("BodyTemp");
					this.OnBodyTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hormone", DbType="NVarChar(50)")]
		public string Hormone
		{
			get
			{
				return this._Hormone;
			}
			set
			{
				if ((this._Hormone != value))
				{
					this.OnHormoneChanging(value);
					this.SendPropertyChanging();
					this._Hormone = value;
					this.SendPropertyChanged("Hormone");
					this.OnHormoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolStress", DbType="NVarChar(50)")]
		public string SchoolStress
		{
			get
			{
				return this._SchoolStress;
			}
			set
			{
				if ((this._SchoolStress != value))
				{
					this.OnSchoolStressChanging(value);
					this.SendPropertyChanging();
					this._SchoolStress = value;
					this.SendPropertyChanged("SchoolStress");
					this.OnSchoolStressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoffeeAmt", DbType="NVarChar(50)")]
		public string CoffeeAmt
		{
			get
			{
				return this._CoffeeAmt;
			}
			set
			{
				if ((this._CoffeeAmt != value))
				{
					this.OnCoffeeAmtChanging(value);
					this.SendPropertyChanging();
					this._CoffeeAmt = value;
					this.SendPropertyChanged("CoffeeAmt");
					this.OnCoffeeAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoffeeTime", DbType="NVarChar(50)")]
		public string CoffeeTime
		{
			get
			{
				return this._CoffeeTime;
			}
			set
			{
				if ((this._CoffeeTime != value))
				{
					this.OnCoffeeTimeChanging(value);
					this.SendPropertyChanging();
					this._CoffeeTime = value;
					this.SendPropertyChanged("CoffeeTime");
					this.OnCoffeeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlcoholAmt", DbType="NVarChar(50)")]
		public string AlcoholAmt
		{
			get
			{
				return this._AlcoholAmt;
			}
			set
			{
				if ((this._AlcoholAmt != value))
				{
					this.OnAlcoholAmtChanging(value);
					this.SendPropertyChanging();
					this._AlcoholAmt = value;
					this.SendPropertyChanged("AlcoholAmt");
					this.OnAlcoholAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlcoholTime", DbType="NVarChar(50)")]
		public string AlcoholTime
		{
			get
			{
				return this._AlcoholTime;
			}
			set
			{
				if ((this._AlcoholTime != value))
				{
					this.OnAlcoholTimeChanging(value);
					this.SendPropertyChanging();
					this._AlcoholTime = value;
					this.SendPropertyChanged("AlcoholTime");
					this.OnAlcoholTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NapTime", DbType="NVarChar(50)")]
		public string NapTime
		{
			get
			{
				return this._NapTime;
			}
			set
			{
				if ((this._NapTime != value))
				{
					this.OnNapTimeChanging(value);
					this.SendPropertyChanging();
					this._NapTime = value;
					this.SendPropertyChanged("NapTime");
					this.OnNapTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NapDuration", DbType="NVarChar(50)")]
		public string NapDuration
		{
			get
			{
				return this._NapDuration;
			}
			set
			{
				if ((this._NapDuration != value))
				{
					this.OnNapDurationChanging(value);
					this.SendPropertyChanging();
					this._NapDuration = value;
					this.SendPropertyChanged("NapDuration");
					this.OnNapDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigDeviceDuration", DbType="NVarChar(50)")]
		public string DigDeviceDuration
		{
			get
			{
				return this._DigDeviceDuration;
			}
			set
			{
				if ((this._DigDeviceDuration != value))
				{
					this.OnDigDeviceDurationChanging(value);
					this.SendPropertyChanging();
					this._DigDeviceDuration = value;
					this.SendPropertyChanged("DigDeviceDuration");
					this.OnDigDeviceDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GamesDuration", DbType="NVarChar(50)")]
		public string GamesDuration
		{
			get
			{
				return this._GamesDuration;
			}
			set
			{
				if ((this._GamesDuration != value))
				{
					this.OnGamesDurationChanging(value);
					this.SendPropertyChanging();
					this._GamesDuration = value;
					this.SendPropertyChanged("GamesDuration");
					this.OnGamesDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SocialActivites", Storage="_SocialActivites", DbType="NVarChar(50)")]
		public string SocialFamily
		{
			get
			{
				return this._SocialActivites;
			}
			set
			{
				if ((this._SocialActivites != value))
				{
					this.OnSocialFamilyChanging(value);
					this.SendPropertyChanging();
					this._SocialActivites = value;
					this.SendPropertyChanged("SocialFamily");
					this.OnSocialFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SocialActivity", Storage="_SocialActivity", DbType="NVarChar(50)")]
		public string SocialFriend
		{
			get
			{
				return this._SocialActivity;
			}
			set
			{
				if ((this._SocialActivity != value))
				{
					this.OnSocialFriendChanging(value);
					this.SendPropertyChanging();
					this._SocialActivity = value;
					this.SendPropertyChanged("SocialFriend");
					this.OnSocialFriendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicDuration", DbType="NVarChar(50)")]
		public string MusicDuration
		{
			get
			{
				return this._MusicDuration;
			}
			set
			{
				if ((this._MusicDuration != value))
				{
					this.OnMusicDurationChanging(value);
					this.SendPropertyChanging();
					this._MusicDuration = value;
					this.SendPropertyChanged("MusicDuration");
					this.OnMusicDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TVDuration", DbType="NVarChar(50)")]
		public string TVDuration
		{
			get
			{
				return this._TVDuration;
			}
			set
			{
				if ((this._TVDuration != value))
				{
					this.OnTVDurationChanging(value);
					this.SendPropertyChanging();
					this._TVDuration = value;
					this.SendPropertyChanged("TVDuration");
					this.OnTVDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="NVarChar(50)")]
		public string WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this.OnWorkTimeChanging(value);
					this.SendPropertyChanging();
					this._WorkTime = value;
					this.SendPropertyChanged("WorkTime");
					this.OnWorkTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkDuration", DbType="NVarChar(50)")]
		public string WorkDuration
		{
			get
			{
				return this._WorkDuration;
			}
			set
			{
				if ((this._WorkDuration != value))
				{
					this.OnWorkDurationChanging(value);
					this.SendPropertyChanging();
					this._WorkDuration = value;
					this.SendPropertyChanged("WorkDuration");
					this.OnWorkDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseDuration", DbType="NVarChar(50)")]
		public string ExerciseDuration
		{
			get
			{
				return this._ExerciseDuration;
			}
			set
			{
				if ((this._ExerciseDuration != value))
				{
					this.OnExerciseDurationChanging(value);
					this.SendPropertyChanging();
					this._ExerciseDuration = value;
					this.SendPropertyChanged("ExerciseDuration");
					this.OnExerciseDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerciseIntensity", DbType="NVarChar(50)")]
		public string ExerciseIntensity
		{
			get
			{
				return this._ExerciseIntensity;
			}
			set
			{
				if ((this._ExerciseIntensity != value))
				{
					this.OnExerciseIntensityChanging(value);
					this.SendPropertyChanging();
					this._ExerciseIntensity = value;
					this.SendPropertyChanged("ExerciseIntensity");
					this.OnExerciseIntensityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DinnerTime", DbType="NVarChar(50)")]
		public string DinnerTime
		{
			get
			{
				return this._DinnerTime;
			}
			set
			{
				if ((this._DinnerTime != value))
				{
					this.OnDinnerTimeChanging(value);
					this.SendPropertyChanging();
					this._DinnerTime = value;
					this.SendPropertyChanged("DinnerTime");
					this.OnDinnerTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SnackTime", DbType="NVarChar(50)")]
		public string SnackTime
		{
			get
			{
				return this._SnackTime;
			}
			set
			{
				if ((this._SnackTime != value))
				{
					this.OnSnackTimeChanging(value);
					this.SendPropertyChanging();
					this._SnackTime = value;
					this.SendPropertyChanged("SnackTime");
					this.OnSnackTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbientTemp", DbType="NVarChar(50)")]
		public string AmbientTemp
		{
			get
			{
				return this._AmbientTemp;
			}
			set
			{
				if ((this._AmbientTemp != value))
				{
					this.OnAmbientTempChanging(value);
					this.SendPropertyChanging();
					this._AmbientTemp = value;
					this.SendPropertyChanged("AmbientTemp");
					this.OnAmbientTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmbientHumd", DbType="NVarChar(50)")]
		public string AmbientHumd
		{
			get
			{
				return this._AmbientHumd;
			}
			set
			{
				if ((this._AmbientHumd != value))
				{
					this.OnAmbientHumdChanging(value);
					this.SendPropertyChanging();
					this._AmbientHumd = value;
					this.SendPropertyChanged("AmbientHumd");
					this.OnAmbientHumdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Light", DbType="NVarChar(50)")]
		public string Light
		{
			get
			{
				return this._Light;
			}
			set
			{
				if ((this._Light != value))
				{
					this.OnLightChanging(value);
					this.SendPropertyChanging();
					this._Light = value;
					this.SendPropertyChanged("Light");
					this.OnLightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SunRiseTime", DbType="NVarChar(50)")]
		public string SunRiseTime
		{
			get
			{
				return this._SunRiseTime;
			}
			set
			{
				if ((this._SunRiseTime != value))
				{
					this.OnSunRiseTimeChanging(value);
					this.SendPropertyChanging();
					this._SunRiseTime = value;
					this.SendPropertyChanged("SunRiseTime");
					this.OnSunRiseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SunSetTime", DbType="NVarChar(50)")]
		public string SunSetTime
		{
			get
			{
				return this._SunSetTime;
			}
			set
			{
				if ((this._SunSetTime != value))
				{
					this.OnSunSetTimeChanging(value);
					this.SendPropertyChanging();
					this._SunSetTime = value;
					this.SendPropertyChanged("SunSetTime");
					this.OnSunSetTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialMedia", CanBeNull=false)]
		public string SocialMedia
		{
			get
			{
				return this._SocialMedia;
			}
			set
			{
				if ((this._SocialMedia != value))
				{
					this.OnSocialMediaChanging(value);
					this.SendPropertyChanging();
					this._SocialMedia = value;
					this.SendPropertyChanged("SocialMedia");
					this.OnSocialMediaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_DiaryData", Storage="_AspNetUser", ThisKey="AspNetUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.DiaryDatas.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.DiaryDatas.Add(this);
						this._AspNetUserId = value.Id;
					}
					else
					{
						this._AspNetUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FitbitData")]
	public partial class FitbitData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _AspNetUserId;
		
		private System.DateTime _DateStamp;
		
		private string _SleepEfficiency;
		
		private string _TimeEnteredBed;
		
		private string _MinutesAsleep;
		
		private string _MinutesAwake;
		
		private string _TimeInBed;
		
		private string _AwakeningsCount;
		
		private string _MinutesToFallAsleep;
		
		private string _MinutesAfterWakeup;
		
		private string _Steps;
		
		private string _Distance;
		
		private string _MinutesSedentary;
		
		private string _MinutesLightlyActive;
		
		private string _MinutesFairlyActive;
		
		private string _MinutesVeryActive;
		
		private string _Water;
		
		private string _CaloriesIn;
		
		private string _CaloriesOut;
		
		private string _ActivityCalories;
		
		private string _Weight;
		
		private string _BMI;
		
		private string _Fat;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnDateStampChanging(System.DateTime value);
    partial void OnDateStampChanged();
    partial void OnSleepEfficiencyChanging(string value);
    partial void OnSleepEfficiencyChanged();
    partial void OnTimeEnteredBedChanging(string value);
    partial void OnTimeEnteredBedChanged();
    partial void OnMinutesAsleepChanging(string value);
    partial void OnMinutesAsleepChanged();
    partial void OnMinutesAwakeChanging(string value);
    partial void OnMinutesAwakeChanged();
    partial void OnTimeInBedChanging(string value);
    partial void OnTimeInBedChanged();
    partial void OnAwakeningsCountChanging(string value);
    partial void OnAwakeningsCountChanged();
    partial void OnMinutesToFallAsleepChanging(string value);
    partial void OnMinutesToFallAsleepChanged();
    partial void OnMinutesAfterWakeupChanging(string value);
    partial void OnMinutesAfterWakeupChanged();
    partial void OnStepsChanging(string value);
    partial void OnStepsChanged();
    partial void OnDistanceChanging(string value);
    partial void OnDistanceChanged();
    partial void OnMinutesSedentaryChanging(string value);
    partial void OnMinutesSedentaryChanged();
    partial void OnMinutesLightlyActiveChanging(string value);
    partial void OnMinutesLightlyActiveChanged();
    partial void OnMinutesFairlyActiveChanging(string value);
    partial void OnMinutesFairlyActiveChanged();
    partial void OnMinutesVeryActiveChanging(string value);
    partial void OnMinutesVeryActiveChanged();
    partial void OnWaterChanging(string value);
    partial void OnWaterChanged();
    partial void OnCaloriesInChanging(string value);
    partial void OnCaloriesInChanged();
    partial void OnCaloriesOutChanging(string value);
    partial void OnCaloriesOutChanged();
    partial void OnActivityCaloriesChanging(string value);
    partial void OnActivityCaloriesChanged();
    partial void OnWeightChanging(string value);
    partial void OnWeightChanged();
    partial void OnBMIChanging(string value);
    partial void OnBMIChanged();
    partial void OnFatChanging(string value);
    partial void OnFatChanged();
    #endregion
		
		public FitbitData()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStamp", DbType="DateTime NOT NULL")]
		public System.DateTime DateStamp
		{
			get
			{
				return this._DateStamp;
			}
			set
			{
				if ((this._DateStamp != value))
				{
					this.OnDateStampChanging(value);
					this.SendPropertyChanging();
					this._DateStamp = value;
					this.SendPropertyChanged("DateStamp");
					this.OnDateStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SleepEfficiency", DbType="NVarChar(50)")]
		public string SleepEfficiency
		{
			get
			{
				return this._SleepEfficiency;
			}
			set
			{
				if ((this._SleepEfficiency != value))
				{
					this.OnSleepEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._SleepEfficiency = value;
					this.SendPropertyChanged("SleepEfficiency");
					this.OnSleepEfficiencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnteredBed", DbType="NVarChar(50)")]
		public string TimeEnteredBed
		{
			get
			{
				return this._TimeEnteredBed;
			}
			set
			{
				if ((this._TimeEnteredBed != value))
				{
					this.OnTimeEnteredBedChanging(value);
					this.SendPropertyChanging();
					this._TimeEnteredBed = value;
					this.SendPropertyChanged("TimeEnteredBed");
					this.OnTimeEnteredBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesAsleep", DbType="NVarChar(50)")]
		public string MinutesAsleep
		{
			get
			{
				return this._MinutesAsleep;
			}
			set
			{
				if ((this._MinutesAsleep != value))
				{
					this.OnMinutesAsleepChanging(value);
					this.SendPropertyChanging();
					this._MinutesAsleep = value;
					this.SendPropertyChanged("MinutesAsleep");
					this.OnMinutesAsleepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesAwake", DbType="NVarChar(50)")]
		public string MinutesAwake
		{
			get
			{
				return this._MinutesAwake;
			}
			set
			{
				if ((this._MinutesAwake != value))
				{
					this.OnMinutesAwakeChanging(value);
					this.SendPropertyChanging();
					this._MinutesAwake = value;
					this.SendPropertyChanged("MinutesAwake");
					this.OnMinutesAwakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeInBed", DbType="NVarChar(50)")]
		public string TimeInBed
		{
			get
			{
				return this._TimeInBed;
			}
			set
			{
				if ((this._TimeInBed != value))
				{
					this.OnTimeInBedChanging(value);
					this.SendPropertyChanging();
					this._TimeInBed = value;
					this.SendPropertyChanged("TimeInBed");
					this.OnTimeInBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AwakeningsCount", DbType="NVarChar(50)")]
		public string AwakeningsCount
		{
			get
			{
				return this._AwakeningsCount;
			}
			set
			{
				if ((this._AwakeningsCount != value))
				{
					this.OnAwakeningsCountChanging(value);
					this.SendPropertyChanging();
					this._AwakeningsCount = value;
					this.SendPropertyChanged("AwakeningsCount");
					this.OnAwakeningsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesToFallAsleep", DbType="NVarChar(50)")]
		public string MinutesToFallAsleep
		{
			get
			{
				return this._MinutesToFallAsleep;
			}
			set
			{
				if ((this._MinutesToFallAsleep != value))
				{
					this.OnMinutesToFallAsleepChanging(value);
					this.SendPropertyChanging();
					this._MinutesToFallAsleep = value;
					this.SendPropertyChanged("MinutesToFallAsleep");
					this.OnMinutesToFallAsleepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesAfterWakeup", DbType="NVarChar(50)")]
		public string MinutesAfterWakeup
		{
			get
			{
				return this._MinutesAfterWakeup;
			}
			set
			{
				if ((this._MinutesAfterWakeup != value))
				{
					this.OnMinutesAfterWakeupChanging(value);
					this.SendPropertyChanging();
					this._MinutesAfterWakeup = value;
					this.SendPropertyChanged("MinutesAfterWakeup");
					this.OnMinutesAfterWakeupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Steps", DbType="NVarChar(50)")]
		public string Steps
		{
			get
			{
				return this._Steps;
			}
			set
			{
				if ((this._Steps != value))
				{
					this.OnStepsChanging(value);
					this.SendPropertyChanging();
					this._Steps = value;
					this.SendPropertyChanged("Steps");
					this.OnStepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="NVarChar(50)")]
		public string Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesSedentary", DbType="NVarChar(50)")]
		public string MinutesSedentary
		{
			get
			{
				return this._MinutesSedentary;
			}
			set
			{
				if ((this._MinutesSedentary != value))
				{
					this.OnMinutesSedentaryChanging(value);
					this.SendPropertyChanging();
					this._MinutesSedentary = value;
					this.SendPropertyChanged("MinutesSedentary");
					this.OnMinutesSedentaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesLightlyActive", DbType="NVarChar(50)")]
		public string MinutesLightlyActive
		{
			get
			{
				return this._MinutesLightlyActive;
			}
			set
			{
				if ((this._MinutesLightlyActive != value))
				{
					this.OnMinutesLightlyActiveChanging(value);
					this.SendPropertyChanging();
					this._MinutesLightlyActive = value;
					this.SendPropertyChanged("MinutesLightlyActive");
					this.OnMinutesLightlyActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesFairlyActive", DbType="NVarChar(50)")]
		public string MinutesFairlyActive
		{
			get
			{
				return this._MinutesFairlyActive;
			}
			set
			{
				if ((this._MinutesFairlyActive != value))
				{
					this.OnMinutesFairlyActiveChanging(value);
					this.SendPropertyChanging();
					this._MinutesFairlyActive = value;
					this.SendPropertyChanged("MinutesFairlyActive");
					this.OnMinutesFairlyActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesVeryActive", DbType="NVarChar(50)")]
		public string MinutesVeryActive
		{
			get
			{
				return this._MinutesVeryActive;
			}
			set
			{
				if ((this._MinutesVeryActive != value))
				{
					this.OnMinutesVeryActiveChanging(value);
					this.SendPropertyChanging();
					this._MinutesVeryActive = value;
					this.SendPropertyChanged("MinutesVeryActive");
					this.OnMinutesVeryActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Water", DbType="NVarChar(50)")]
		public string Water
		{
			get
			{
				return this._Water;
			}
			set
			{
				if ((this._Water != value))
				{
					this.OnWaterChanging(value);
					this.SendPropertyChanging();
					this._Water = value;
					this.SendPropertyChanged("Water");
					this.OnWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaloriesIn", DbType="NVarChar(50)")]
		public string CaloriesIn
		{
			get
			{
				return this._CaloriesIn;
			}
			set
			{
				if ((this._CaloriesIn != value))
				{
					this.OnCaloriesInChanging(value);
					this.SendPropertyChanging();
					this._CaloriesIn = value;
					this.SendPropertyChanged("CaloriesIn");
					this.OnCaloriesInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaloriesOut", DbType="NVarChar(50)")]
		public string CaloriesOut
		{
			get
			{
				return this._CaloriesOut;
			}
			set
			{
				if ((this._CaloriesOut != value))
				{
					this.OnCaloriesOutChanging(value);
					this.SendPropertyChanging();
					this._CaloriesOut = value;
					this.SendPropertyChanged("CaloriesOut");
					this.OnCaloriesOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityCalories", DbType="NVarChar(50)")]
		public string ActivityCalories
		{
			get
			{
				return this._ActivityCalories;
			}
			set
			{
				if ((this._ActivityCalories != value))
				{
					this.OnActivityCaloriesChanging(value);
					this.SendPropertyChanging();
					this._ActivityCalories = value;
					this.SendPropertyChanged("ActivityCalories");
					this.OnActivityCaloriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="NVarChar(50)")]
		public string Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BMI", DbType="NVarChar(50)")]
		public string BMI
		{
			get
			{
				return this._BMI;
			}
			set
			{
				if ((this._BMI != value))
				{
					this.OnBMIChanging(value);
					this.SendPropertyChanging();
					this._BMI = value;
					this.SendPropertyChanged("BMI");
					this.OnBMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fat", DbType="NVarChar(50)")]
		public string Fat
		{
			get
			{
				return this._Fat;
			}
			set
			{
				if ((this._Fat != value))
				{
					this.OnFatChanging(value);
					this.SendPropertyChanging();
					this._Fat = value;
					this.SendPropertyChanged("Fat");
					this.OnFatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_FitbitData", Storage="_AspNetUser", ThisKey="AspNetUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.FitbitDatas.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.FitbitDatas.Add(this);
						this._AspNetUserId = value.Id;
					}
					else
					{
						this._AspNetUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TokenManagements")]
	public partial class TokenManagement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Token;
		
		private string _TokenType;
		
		private int _ExpiresIn;
		
		private string _RefreshToken;
		
		private string _AspNetUserId;
		
		private string _UserId;
		
		private System.DateTime _DateChanged;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTokenChanging(string value);
    partial void OnTokenChanged();
    partial void OnTokenTypeChanging(string value);
    partial void OnTokenTypeChanged();
    partial void OnExpiresInChanging(int value);
    partial void OnExpiresInChanged();
    partial void OnRefreshTokenChanging(string value);
    partial void OnRefreshTokenChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnDateChangedChanging(System.DateTime value);
    partial void OnDateChangedChanged();
    #endregion
		
		public TokenManagement()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TokenType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TokenType
		{
			get
			{
				return this._TokenType;
			}
			set
			{
				if ((this._TokenType != value))
				{
					this.OnTokenTypeChanging(value);
					this.SendPropertyChanging();
					this._TokenType = value;
					this.SendPropertyChanged("TokenType");
					this.OnTokenTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiresIn", DbType="Int NOT NULL")]
		public int ExpiresIn
		{
			get
			{
				return this._ExpiresIn;
			}
			set
			{
				if ((this._ExpiresIn != value))
				{
					this.OnExpiresInChanging(value);
					this.SendPropertyChanging();
					this._ExpiresIn = value;
					this.SendPropertyChanged("ExpiresIn");
					this.OnExpiresInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshToken", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RefreshToken
		{
			get
			{
				return this._RefreshToken;
			}
			set
			{
				if ((this._RefreshToken != value))
				{
					this.OnRefreshTokenChanging(value);
					this.SendPropertyChanging();
					this._RefreshToken = value;
					this.SendPropertyChanged("RefreshToken");
					this.OnRefreshTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(MAX)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime NOT NULL")]
		public System.DateTime DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_TokenManagement", Storage="_AspNetUser", ThisKey="AspNetUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.TokenManagements.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.TokenManagements.Add(this);
						this._AspNetUserId = value.Id;
					}
					else
					{
						this._AspNetUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserQuestions")]
	public partial class UserQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AspNetUserId;
		
		private bool _WakeUpFreshness;
		
		private bool _Mood;
		
		private bool _Stress;
		
		private bool _Tiredness;
		
		private bool _Dream;
		
		private bool _SchoolQuestions;
		
		private bool _CoffeeQuestions;
		
		private bool _AlcoholQuestions;
		
		private bool _NapQuestions;
		
		private bool _DigDeviceDurationQuestion;
		
		private bool _GameDurationQuestion;
		
		private bool _SocialMediaDurationQuestion;
		
		private bool _SocialActivityDurationQuestion;
		
		private bool _MusicDurationQuestion;
		
		private bool _TVDurationQuestion;
		
		private bool _WorkQuestions;
		
		private bool _ExersiseQuestions;
		
		private bool _FoodQuestions;
		
		private bool _GenderHormoneQuestion;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAspNetUserIdChanging(string value);
    partial void OnAspNetUserIdChanged();
    partial void OnWakeUpFreshnessChanging(bool value);
    partial void OnWakeUpFreshnessChanged();
    partial void OnMoodChanging(bool value);
    partial void OnMoodChanged();
    partial void OnStressChanging(bool value);
    partial void OnStressChanged();
    partial void OnTirednessChanging(bool value);
    partial void OnTirednessChanged();
    partial void OnDreamChanging(bool value);
    partial void OnDreamChanged();
    partial void OnSchoolQuestionsChanging(bool value);
    partial void OnSchoolQuestionsChanged();
    partial void OnCoffeeQuestionsChanging(bool value);
    partial void OnCoffeeQuestionsChanged();
    partial void OnAlcoholQuestionsChanging(bool value);
    partial void OnAlcoholQuestionsChanged();
    partial void OnNapQuestionsChanging(bool value);
    partial void OnNapQuestionsChanged();
    partial void OnDigDeviceDurationQuestionChanging(bool value);
    partial void OnDigDeviceDurationQuestionChanged();
    partial void OnGameDurationQuestionChanging(bool value);
    partial void OnGameDurationQuestionChanged();
    partial void OnSocialMediaDurationQuestionChanging(bool value);
    partial void OnSocialMediaDurationQuestionChanged();
    partial void OnSocialActivityDurationQuestionChanging(bool value);
    partial void OnSocialActivityDurationQuestionChanged();
    partial void OnMusicDurationQuestionChanging(bool value);
    partial void OnMusicDurationQuestionChanged();
    partial void OnTVDurationQuestionChanging(bool value);
    partial void OnTVDurationQuestionChanged();
    partial void OnWorkQuestionsChanging(bool value);
    partial void OnWorkQuestionsChanged();
    partial void OnExersiseQuestionsChanging(bool value);
    partial void OnExersiseQuestionsChanged();
    partial void OnFoodQuestionsChanging(bool value);
    partial void OnFoodQuestionsChanged();
    partial void OnGenderHormoneQuestionChanging(bool value);
    partial void OnGenderHormoneQuestionChanged();
    #endregion
		
		public UserQuestion()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string AspNetUserId
		{
			get
			{
				return this._AspNetUserId;
			}
			set
			{
				if ((this._AspNetUserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAspNetUserIdChanging(value);
					this.SendPropertyChanging();
					this._AspNetUserId = value;
					this.SendPropertyChanged("AspNetUserId");
					this.OnAspNetUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WakeUpFreshness", DbType="Bit NOT NULL")]
		public bool WakeUpFreshness
		{
			get
			{
				return this._WakeUpFreshness;
			}
			set
			{
				if ((this._WakeUpFreshness != value))
				{
					this.OnWakeUpFreshnessChanging(value);
					this.SendPropertyChanging();
					this._WakeUpFreshness = value;
					this.SendPropertyChanged("WakeUpFreshness");
					this.OnWakeUpFreshnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mood", DbType="Bit NOT NULL")]
		public bool Mood
		{
			get
			{
				return this._Mood;
			}
			set
			{
				if ((this._Mood != value))
				{
					this.OnMoodChanging(value);
					this.SendPropertyChanging();
					this._Mood = value;
					this.SendPropertyChanged("Mood");
					this.OnMoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stress", DbType="Bit NOT NULL")]
		public bool Stress
		{
			get
			{
				return this._Stress;
			}
			set
			{
				if ((this._Stress != value))
				{
					this.OnStressChanging(value);
					this.SendPropertyChanging();
					this._Stress = value;
					this.SendPropertyChanged("Stress");
					this.OnStressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tiredness", DbType="Bit NOT NULL")]
		public bool Tiredness
		{
			get
			{
				return this._Tiredness;
			}
			set
			{
				if ((this._Tiredness != value))
				{
					this.OnTirednessChanging(value);
					this.SendPropertyChanging();
					this._Tiredness = value;
					this.SendPropertyChanged("Tiredness");
					this.OnTirednessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dream", DbType="Bit NOT NULL")]
		public bool Dream
		{
			get
			{
				return this._Dream;
			}
			set
			{
				if ((this._Dream != value))
				{
					this.OnDreamChanging(value);
					this.SendPropertyChanging();
					this._Dream = value;
					this.SendPropertyChanged("Dream");
					this.OnDreamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolQuestions", DbType="Bit NOT NULL")]
		public bool SchoolQuestions
		{
			get
			{
				return this._SchoolQuestions;
			}
			set
			{
				if ((this._SchoolQuestions != value))
				{
					this.OnSchoolQuestionsChanging(value);
					this.SendPropertyChanging();
					this._SchoolQuestions = value;
					this.SendPropertyChanged("SchoolQuestions");
					this.OnSchoolQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoffeeQuestions", DbType="Bit NOT NULL")]
		public bool CoffeeQuestions
		{
			get
			{
				return this._CoffeeQuestions;
			}
			set
			{
				if ((this._CoffeeQuestions != value))
				{
					this.OnCoffeeQuestionsChanging(value);
					this.SendPropertyChanging();
					this._CoffeeQuestions = value;
					this.SendPropertyChanged("CoffeeQuestions");
					this.OnCoffeeQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlcoholQuestions", DbType="Bit NOT NULL")]
		public bool AlcoholQuestions
		{
			get
			{
				return this._AlcoholQuestions;
			}
			set
			{
				if ((this._AlcoholQuestions != value))
				{
					this.OnAlcoholQuestionsChanging(value);
					this.SendPropertyChanging();
					this._AlcoholQuestions = value;
					this.SendPropertyChanged("AlcoholQuestions");
					this.OnAlcoholQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NapQuestions", DbType="Bit NOT NULL")]
		public bool NapQuestions
		{
			get
			{
				return this._NapQuestions;
			}
			set
			{
				if ((this._NapQuestions != value))
				{
					this.OnNapQuestionsChanging(value);
					this.SendPropertyChanging();
					this._NapQuestions = value;
					this.SendPropertyChanged("NapQuestions");
					this.OnNapQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigDeviceDurationQuestion", DbType="Bit NOT NULL")]
		public bool DigDeviceDurationQuestion
		{
			get
			{
				return this._DigDeviceDurationQuestion;
			}
			set
			{
				if ((this._DigDeviceDurationQuestion != value))
				{
					this.OnDigDeviceDurationQuestionChanging(value);
					this.SendPropertyChanging();
					this._DigDeviceDurationQuestion = value;
					this.SendPropertyChanged("DigDeviceDurationQuestion");
					this.OnDigDeviceDurationQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDurationQuestion", DbType="Bit NOT NULL")]
		public bool GameDurationQuestion
		{
			get
			{
				return this._GameDurationQuestion;
			}
			set
			{
				if ((this._GameDurationQuestion != value))
				{
					this.OnGameDurationQuestionChanging(value);
					this.SendPropertyChanging();
					this._GameDurationQuestion = value;
					this.SendPropertyChanged("GameDurationQuestion");
					this.OnGameDurationQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialMediaDurationQuestion", DbType="Bit NOT NULL")]
		public bool SocialMediaDurationQuestion
		{
			get
			{
				return this._SocialMediaDurationQuestion;
			}
			set
			{
				if ((this._SocialMediaDurationQuestion != value))
				{
					this.OnSocialMediaDurationQuestionChanging(value);
					this.SendPropertyChanging();
					this._SocialMediaDurationQuestion = value;
					this.SendPropertyChanged("SocialMediaDurationQuestion");
					this.OnSocialMediaDurationQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SocialActivityDurationQuestion", DbType="Bit NOT NULL")]
		public bool SocialActivityDurationQuestion
		{
			get
			{
				return this._SocialActivityDurationQuestion;
			}
			set
			{
				if ((this._SocialActivityDurationQuestion != value))
				{
					this.OnSocialActivityDurationQuestionChanging(value);
					this.SendPropertyChanging();
					this._SocialActivityDurationQuestion = value;
					this.SendPropertyChanged("SocialActivityDurationQuestion");
					this.OnSocialActivityDurationQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicDurationQuestion", DbType="Bit NOT NULL")]
		public bool MusicDurationQuestion
		{
			get
			{
				return this._MusicDurationQuestion;
			}
			set
			{
				if ((this._MusicDurationQuestion != value))
				{
					this.OnMusicDurationQuestionChanging(value);
					this.SendPropertyChanging();
					this._MusicDurationQuestion = value;
					this.SendPropertyChanged("MusicDurationQuestion");
					this.OnMusicDurationQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TVDurationQuestion", DbType="Bit NOT NULL")]
		public bool TVDurationQuestion
		{
			get
			{
				return this._TVDurationQuestion;
			}
			set
			{
				if ((this._TVDurationQuestion != value))
				{
					this.OnTVDurationQuestionChanging(value);
					this.SendPropertyChanging();
					this._TVDurationQuestion = value;
					this.SendPropertyChanged("TVDurationQuestion");
					this.OnTVDurationQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkQuestions", DbType="Bit NOT NULL")]
		public bool WorkQuestions
		{
			get
			{
				return this._WorkQuestions;
			}
			set
			{
				if ((this._WorkQuestions != value))
				{
					this.OnWorkQuestionsChanging(value);
					this.SendPropertyChanging();
					this._WorkQuestions = value;
					this.SendPropertyChanged("WorkQuestions");
					this.OnWorkQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExersiseQuestions", DbType="Bit NOT NULL")]
		public bool ExersiseQuestions
		{
			get
			{
				return this._ExersiseQuestions;
			}
			set
			{
				if ((this._ExersiseQuestions != value))
				{
					this.OnExersiseQuestionsChanging(value);
					this.SendPropertyChanging();
					this._ExersiseQuestions = value;
					this.SendPropertyChanged("ExersiseQuestions");
					this.OnExersiseQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodQuestions", DbType="Bit NOT NULL")]
		public bool FoodQuestions
		{
			get
			{
				return this._FoodQuestions;
			}
			set
			{
				if ((this._FoodQuestions != value))
				{
					this.OnFoodQuestionsChanging(value);
					this.SendPropertyChanging();
					this._FoodQuestions = value;
					this.SendPropertyChanged("FoodQuestions");
					this.OnFoodQuestionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderHormoneQuestion", DbType="Bit NOT NULL")]
		public bool GenderHormoneQuestion
		{
			get
			{
				return this._GenderHormoneQuestion;
			}
			set
			{
				if ((this._GenderHormoneQuestion != value))
				{
					this.OnGenderHormoneQuestionChanging(value);
					this.SendPropertyChanging();
					this._GenderHormoneQuestion = value;
					this.SendPropertyChanged("GenderHormoneQuestion");
					this.OnGenderHormoneQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_UserQuestion", Storage="_AspNetUser", ThisKey="AspNetUserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.UserQuestions.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.UserQuestions.Add(this);
						this._AspNetUserId = value.Id;
					}
					else
					{
						this._AspNetUserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
