@using Fitbit.Models
@model IntradayData


@{
    ViewBag.Title = "StepIntraday";
    Layout = "~/Views/Shared/_Layout.cshtml";
    }

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>StepIntraday</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js" charset="utf-8"></script>
    <style type="text/css">
        .axis path, .axis line {
            fill: none;
            stroke: #bdbdbd;
            shape-rendering: crispEdges;
            font-size: x-small;
        }

        [class*="col-"] {
            background-clip: padding-box;
            /*border: 10px solid transparent;*/
            border: 2px solid;
            border-color: #bdbdbd;
        }

        div.tooltip {
            position: absolute;
            text-align: center;
            width: 60px;
            height: 60px;
            padding: 2px;
            font: 12px sans-serif;
            background: lightsteelblue;
            border: 0px;
            border-radius: 8px;
            pointer-events: none;
        }
    </style>
</head>
<body>
    <div id="Chart">
        <script type="text/javascript">

            var data = [];

    @foreach (IntradayDataValues d in Model.DataSet) { 
     @:data.push({Time: "@d.Time",Value: "@d.Value"});
        }

            console.log(data);


    PlotTimeseries(data, "#Chart", "Steps");

    function PlotTimeseries(myData, section, sFeature) {

        var w = 1000;
        var h = 500;
        var margin = { top: 30, right: 20, bottom: 200, left: 40 };
        width = w - margin.left - margin.right,
        height = h - margin.top - margin.bottom;
        //parseDate = d3.time.format("%m/%d/%Y").parse;


        var xRange = d3.scale.ordinal()
        .rangeRoundBands([0, width], 0.2);

        var yRange = d3.scale.linear()
        .range([height, 0]);

        var xAxis = d3.svg.axis()
        .scale(xRange)
        .orient("bottom")
        .ticks(8)
        //.tickFormat(d3.time.format("%b %e"));

        var yAxis = d3.svg.axis()
        .scale(yRange)
        .orient("left")
        .ticks(5);

        var chart = d3.select(section).append("svg")
        .attr("width", w)
        .attr("height", h)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        myData.forEach(function (d) {
            //d.Time = parseDate(d.Time);
            d.Time = d.Time;
            d.Value = +d.Value;
        });

        xRange.domain(myData.map(function (d) { return d.Time; }));
        yRange.domain([0, d3.max(myData, function (d) { return d.Value })]);

        chart.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis)
        .selectAll("text")
        .style("text-anchor", "end")
        .attr("dx", "-.8em")
        .attr("dy", "-.55em")
        .attr("transform", "rotate(-90)");

        chart.append("g")
        .attr("class", "y axis")
        .call(yAxis)
        .append("text")
        //.attr("transform", "rotate(-90)")
        //.attr("y", 6)
        //.attr("dy", ".71em")
        //.style("text-anchor", "end")
        .text(sFeature);

        var div = d3.select(section).append("div")
        .attr("class", "tooltip")
        .style("opacity", 0);
       // var formatTime = d3.time.format("%b %e");

        chart.selectAll("rect")
        .data(myData)
        .enter().append("rect")
        .attr("class", "bar")
        .attr("x", function (d) { return xRange(d.Time); })
        .attr("width", xRange.rangeBand())
        .attr("y", function (d) { return yRange(d.Value); })
        .attr("height", function (d) { return (height - yRange(d.Value)); })
        .attr("fill", "#bdbdbd")
        .on("mouseover", function (d) {
            d3.select(this)
            .attr("fill", "#3376bf");

            div.transition()
            .duration(200)
            .style("opacity", 0.9);

           // div.html(formatTime(d.Time) + "<br />" + d.Value)
            div.html(d.Time + "<br />" + d.Value)
            .style("left", (d3.event.pageX - 64) + "px")
            .style("top", (d3.event.pageY - 12) + "px");

        })
        .on("mouseout", function (d) {
            d3.select(this)
            .attr("fill", "#bdbdbd");
            div.transition()
            .duration(500)
            .style("opacity", 0);
        });
    }

        </script></div>

        <div>
            <table>
                @foreach (IntradayDataValues intraData in Model.DataSet)
                {
                    <tr>
                        <td>@intraData.Time.ToShortTimeString()</td>
                        <td>@intraData.Value</td>
                    </tr>
                }
            </table>
        </div>
</body>
</html>
